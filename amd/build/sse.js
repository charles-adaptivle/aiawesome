define("local_aiawesome/sse",["exports"],(function(e){"use strict";
/**
   * Server-Sent Events client for AI Awesome plugin.
   *
   * @module     local_aiawesome/sse
   * @copyright  2025 Charles Horton <charles@adaptivle.co.uk>
   * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
   */class t extends EventTarget{constructor(e,t={}){super(),this.url=e,this.options={maxRetries:2,retryDelay:1e3,timeout:12e4,...t},this.eventSource=null,this.abortController=null,this.retryCount=0,this.isConnected=!1,this.lastEventId=null}async connect(e={}){this.abortController=new AbortController;try{const t=await fetch(this.url,{method:"POST",headers:{"Content-Type":"application/json",Accept:"text/event-stream"},body:JSON.stringify({...e,sesskey:M.cfg.sesskey}),signal:this.abortController.signal});if(!t.ok)throw new Error(`HTTP ${t.status}: ${t.statusText}`);const s=t.headers.get("content-type");if(!s||!s.includes("text/event-stream")){const e=await t.text();throw new Error(`Expected SSE response, got: ${s}. Response: ${e}`)}await this.processStream(t)}catch(t){if("AbortError"===t.name)return void this.emit("close",{reason:"aborted"});this.emit("error",{error:t,retry:this.shouldRetry()}),this.shouldRetry()&&await this.scheduleRetry(e)}}async processStream(e){const t=e.body.getReader(),s=new TextDecoder;let r="";this.isConnected=!0,this.emit("open",{timestamp:Date.now()});try{for(;;){const{value:e,done:n}=await t.read();if(n)break;if(this.abortController.signal.aborted)break;for(r+=s.decode(e,{stream:!0});r.includes("\n");){const e=r.indexOf("\n"),t=r.slice(0,e);r=r.slice(e+1),this.processLine(t.trim())}}}finally{t.releaseLock(),this.isConnected=!1}this.emit("close",{reason:"completed"})}processLine(e){if(""!==e)if(e.startsWith("data: ")){const s=e.slice(6);try{const e=JSON.parse(s);this.emit("message",{data:e,timestamp:Date.now()})}catch(t){this.emit("message",{data:s,timestamp:Date.now()})}}else if(e.startsWith("event: ")){const t=e.slice(7);this.currentEventType=t}else if(e.startsWith("id: "))this.lastEventId=e.slice(4);else if(e.startsWith("retry: ")){const t=parseInt(e.slice(7),10);isNaN(t)||(this.options.retryDelay=t)}}disconnect(){this.abortController&&this.abortController.abort(),this.eventSource&&(this.eventSource.close(),this.eventSource=null),this.isConnected=!1,this.retryCount=0}shouldRetry(){return this.retryCount<this.options.maxRetries}async scheduleRetry(e){this.retryCount++;const t=this.options.retryDelay*Math.pow(2,this.retryCount-1);this.emit("retrying",{attempt:this.retryCount,maxRetries:this.options.maxRetries,delay:t}),await new Promise((e=>setTimeout(e,t))),this.abortController.signal.aborted||await this.connect(e)}emit(e,t={}){this.dispatchEvent(new CustomEvent(e,{detail:t}))}get connected(){return this.isConnected}get stats(){return{connected:this.isConnected,retryCount:this.retryCount,maxRetries:this.options.maxRetries,lastEventId:this.lastEventId}}}function s(e,s={}){return new t(e,s)}e.SSEClient=t,e.createSSEClient=s,e.streamAIResponse=function(e,t,r={}){const n=s(e,{maxRetries:2,retryDelay:1e3,timeout:12e4});return n.addEventListener("open",(e=>{r.onOpen&&r.onOpen(e.detail)})),n.addEventListener("message",(e=>{const{data:t}=e.detail;r.onMessage&&r.onMessage(t),t&&"object"==typeof t&&(t.text&&r.onToken&&r.onToken(t.text,t),t.references&&r.onReferences&&r.onReferences(t.references),t.code&&r.onError&&r.onError(t))})),n.addEventListener("error",(e=>{const{error:t,retry:s}=e.detail;r.onError&&r.onError({code:"NETWORK_ERROR",message:t.message,canRetry:s})})),n.addEventListener("retrying",(e=>{r.onRetry&&r.onRetry(e.detail)})),n.addEventListener("close",(e=>{r.onClose&&r.onClose(e.detail)})),n.connect(t),n},Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));
