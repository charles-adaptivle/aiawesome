{"version":3,"file":"boot.min.js","sources":["../src/boot.js"],"sourcesContent":["/**\n * Boot module for AI Awesome plugin.\n * \n * This module handles the initial setup and integration with Moodle's UI.\n * It injects the chat toggle button and manages the drawer lifecycle.\n *\n * @module     local_aiawesome/boot\n * @copyright  2025 Charles Horton <charles@adaptivle.co.uk>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport { getString } from 'core/str';\n\n/**\n * Initialize the AI Awesome chat feature.\n * \n * This function is called by Moodle when the page loads.\n * It sets up the UI integration and event handlers.\n */\nexport const init = () => {\n    // Check if user has permission and feature is enabled\n    if (!M.cfg.developerdebug && !document.body.hasAttribute('data-aiawesome-enabled')) {\n        return; // Feature disabled or no permission\n    }\n\n    // Wait for DOM to be ready\n    if (document.readyState === 'loading') {\n        document.addEventListener('DOMContentLoaded', setupUI);\n    } else {\n        setupUI();\n    }\n};\n\n/**\n * Set up the user interface elements.\n */\nasync function setupUI() {\n    try {\n        // Inject the toggle button\n        await injectToggleButton();\n        \n        // Create the drawer container\n        createDrawerContainer();\n        \n        // Set up global event handlers\n        setupGlobalHandlers();\n        \n    } catch (error) {\n        console.error('AI Awesome: Failed to initialize UI', error);\n    }\n}\n\n/**\n * Inject the AI chat toggle button into the user menu.\n * \n * This function attempts to find the user menu and add our toggle button.\n * It's designed to be theme-agnostic and resilient to DOM changes.\n */\nasync function injectToggleButton() {\n    // Get the localized title string\n    const title = await getString('chat_toggle_title', 'local_aiawesome');\n    \n    // Try multiple selectors to find the user menu\n    const selectors = [\n        '.usermenu .dropdown-menu',           // Boost theme\n        '#user-menu-dropdown',                // Classic theme\n        '[data-region=\"user-menu\"] .dropdown-menu', // Modern themes\n        '.navbar-nav .dropdown-menu:has([data-title=\"usermenu\"])', // Generic\n    ];\n    \n    let userMenu = null;\n    for (const selector of selectors) {\n        userMenu = document.querySelector(selector);\n        if (userMenu) break;\n    }\n    \n    if (!userMenu) {\n        console.warn('AI Awesome: Could not find user menu to inject toggle button');\n        // Fallback: inject into a fixed position\n        injectFloatingToggle(title);\n        return;\n    }\n    \n    // Create the toggle button\n    const toggleButton = document.createElement('a');\n    toggleButton.className = 'dropdown-item';\n    toggleButton.href = '#';\n    toggleButton.setAttribute('data-aiawesome-toggle', 'true');\n    toggleButton.setAttribute('aria-label', title);\n    toggleButton.setAttribute('role', 'button');\n    toggleButton.innerHTML = `\n        <i class=\"icon fa fa-comments-o fa-fw\" aria-hidden=\"true\"></i>\n        <span class=\"menu-action-text\">${title}</span>\n    `;\n    \n    // Add click handler\n    toggleButton.addEventListener('click', handleToggleClick);\n    \n    // Insert the button safely\n    try {\n        const divider = userMenu.querySelector('.dropdown-divider');\n        if (divider && divider.parentNode === userMenu) {\n            // Only use insertBefore if divider is a direct child\n            userMenu.insertBefore(toggleButton, divider);\n        } else {\n            // Fallback to appendChild\n            userMenu.appendChild(toggleButton);\n        }\n    } catch (insertError) {\n        // Fallback to appendChild if insertBefore fails\n        userMenu.appendChild(toggleButton);\n    }\n}\n\n/**\n * Create a floating toggle button as fallback.\n * \n * @param {string} title - Button title\n */\nfunction injectFloatingToggle(title) {\n    const toggleButton = document.createElement('button');\n    toggleButton.className = 'aiawesome-floating-toggle';\n    toggleButton.setAttribute('data-aiawesome-toggle', 'true');\n    toggleButton.setAttribute('aria-label', title);\n    toggleButton.setAttribute('title', title);\n    toggleButton.innerHTML = '<i class=\"fa fa-comments-o\" aria-hidden=\"true\"></i>';\n    \n    // Style the floating button\n    Object.assign(toggleButton.style, {\n        position: 'fixed',\n        top: '80px',\n        right: '20px',\n        zIndex: '1050',\n        width: '50px',\n        height: '50px',\n        borderRadius: '50%',\n        backgroundColor: '#007bff',\n        color: 'white',\n        border: 'none',\n        boxShadow: '0 2px 10px rgba(0,0,0,0.2)',\n        cursor: 'pointer',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        fontSize: '18px',\n        transition: 'all 0.3s ease',\n    });\n    \n    // Add hover effects\n    toggleButton.addEventListener('mouseenter', () => {\n        toggleButton.style.backgroundColor = '#0056b3';\n        toggleButton.style.transform = 'scale(1.1)';\n    });\n    \n    toggleButton.addEventListener('mouseleave', () => {\n        toggleButton.style.backgroundColor = '#007bff';\n        toggleButton.style.transform = 'scale(1)';\n    });\n    \n    toggleButton.addEventListener('click', handleToggleClick);\n    \n    document.body.appendChild(toggleButton);\n}\n\n/**\n * Create the drawer container element.\n */\nfunction createDrawerContainer() {\n    // Check if drawer already exists\n    if (document.getElementById('aiawesome-drawer')) {\n        return;\n    }\n    \n    const drawer = document.createElement('aside');\n    drawer.id = 'aiawesome-drawer';\n    drawer.className = 'aiawesome-drawer';\n    drawer.setAttribute('role', 'complementary');\n    drawer.setAttribute('aria-label', 'AI Chat');\n    drawer.setAttribute('aria-hidden', 'true');\n    drawer.style.display = 'none';\n    \n    // Add basic styles\n    Object.assign(drawer.style, {\n        position: 'fixed',\n        top: '0',\n        right: '0',\n        width: '400px',\n        height: '100vh',\n        backgroundColor: 'white',\n        boxShadow: '-2px 0 10px rgba(0,0,0,0.1)',\n        zIndex: '1040',\n        transform: 'translateX(100%)',\n        transition: 'transform 0.3s ease-in-out',\n        display: 'flex',\n        flexDirection: 'column',\n    });\n    \n    // Add to body\n    document.body.appendChild(drawer);\n}\n\n/**\n * Handle toggle button click.\n * \n * @param {Event} event - Click event\n */\nasync function handleToggleClick(event) {\n    event.preventDefault();\n    event.stopPropagation();\n    \n    const drawer = document.getElementById('aiawesome-drawer');\n    if (!drawer) return;\n    \n    const isOpen = drawer.classList.contains('open');\n    \n    if (isOpen) {\n        closeDrawer();\n    } else {\n        await openDrawer();\n    }\n    \n    // Close dropdown menu if open\n    const dropdown = event.target.closest('.dropdown');\n    if (dropdown) {\n        const menu = dropdown.querySelector('.dropdown-menu');\n        if (menu && menu.classList.contains('show')) {\n            menu.classList.remove('show');\n        }\n    }\n}\n\n/**\n * Open the AI chat drawer.\n */\nasync function openDrawer() {\n    const drawer = document.getElementById('aiawesome-drawer');\n    if (!drawer) return;\n    \n    try {\n        // Show drawer\n        drawer.style.display = 'flex';\n        drawer.classList.add('open');\n        drawer.setAttribute('aria-hidden', 'false');\n        drawer.style.transform = 'translateX(0)';\n        \n        // Load and mount the React app\n        await loadAndMountApp();\n        \n        // Focus management\n        trapFocus(drawer);\n        \n        // Update toggle button state\n        updateToggleState(true);\n        \n    } catch (error) {\n        console.error('AI Awesome: Failed to open drawer', error);\n        closeDrawer();\n    }\n}\n\n/**\n * Close the AI chat drawer.\n */\nfunction closeDrawer() {\n    const drawer = document.getElementById('aiawesome-drawer');\n    if (!drawer) return;\n    \n    drawer.classList.remove('open');\n    drawer.setAttribute('aria-hidden', 'true');\n    drawer.style.transform = 'translateX(100%)';\n    \n    // Hide after transition\n    setTimeout(() => {\n        if (!drawer.classList.contains('open')) {\n            drawer.style.display = 'none';\n        }\n    }, 300);\n    \n    // Update toggle button state\n    updateToggleState(false);\n    \n    // Return focus to toggle button\n    const toggle = document.querySelector('[data-aiawesome-toggle]');\n    if (toggle) {\n        toggle.focus();\n    }\n}\n\n/**\n * Load and mount the React application.\n */\nasync function loadAndMountApp() {\n    const drawer = document.getElementById('aiawesome-drawer');\n    if (!drawer) {\n        return;\n    }\n    \n    // Check if app is already loaded\n    if (drawer.hasAttribute('data-app-mounted')) {\n        return;\n    }\n    \n    try {\n        // Use RequireJS to load the simple vanilla JS app module\n        await new Promise((resolve, reject) => {\n            require(['local_aiawesome/simple_app'], (app) => {\n                if (app && app.mount) {\n                    app.mount(drawer).then(() => {\n                        drawer.setAttribute('data-app-mounted', 'true');\n                        resolve();\n                    }).catch(reject);\n                } else {\n                    reject(new Error('Simple app module does not have mount function'));\n                }\n            }, (error) => {\n                reject(error);\n            });\n        });\n        \n    } catch (error) {\n        // Fallback: create a simple chat interface\n        createSimpleChatInterface(drawer);\n        drawer.setAttribute('data-app-mounted', 'true');\n    }\n}\n\n/**\n * Create a simple chat interface as fallback.\n *\n * @param {Element} drawer - Drawer element\n */\nfunction createSimpleChatInterface(drawer) {\n    drawer.innerHTML = `\n        <div style=\"padding: 20px; text-align: center; height: 100%; display: flex; flex-direction: column; justify-content: center;\">\n            <div style=\"max-width: 300px; margin: 0 auto;\">\n                <h3 style=\"color: #333; margin-bottom: 15px;\">AI Chat Assistant</h3>\n                <div style=\"color: #666; font-size: 14px; line-height: 1.5;\">\n                    <p style=\"margin-bottom: 10px;\">🤖 The AI chat interface is loading...</p>\n                    <p style=\"margin-bottom: 15px;\">This fallback appears when the main React app fails to load.</p>\n                    <p style=\"font-size: 12px; color: #999;\">\n                        Check the browser console for technical details or try refreshing the page.\n                    </p>\n                </div>\n                <button onclick=\"this.parentElement.parentElement.parentElement.parentElement.style.display='none'\" \n                        style=\"margin-top: 20px; padding: 8px 16px; background: #007bff; color: white; border: none; border-radius: 4px; cursor: pointer;\">\n                    Close\n                </button>\n            </div>\n        </div>\n    `;\n}\n\n/**\n * Set up global event handlers.\n */\nfunction setupGlobalHandlers() {\n    // Handle escape key to close drawer\n    document.addEventListener('keydown', (event) => {\n        if (event.key === 'Escape') {\n            const drawer = document.getElementById('aiawesome-drawer');\n            if (drawer && drawer.classList.contains('open')) {\n                closeDrawer();\n            }\n        }\n    });\n    \n    // Handle clicks outside drawer\n    document.addEventListener('click', (event) => {\n        const drawer = document.getElementById('aiawesome-drawer');\n        if (!drawer || !drawer.classList.contains('open')) return;\n        \n        if (!drawer.contains(event.target) && \n            !event.target.hasAttribute('data-aiawesome-toggle') &&\n            !event.target.closest('[data-aiawesome-toggle]')) {\n            closeDrawer();\n        }\n    });\n    \n    // Handle window resize\n    window.addEventListener('resize', () => {\n        const drawer = document.getElementById('aiawesome-drawer');\n        if (!drawer) return;\n        \n        // Adjust drawer width on small screens\n        if (window.innerWidth < 768) {\n            drawer.style.width = '100vw';\n        } else {\n            drawer.style.width = '400px';\n        }\n    });\n}\n\n/**\n * Trap focus within the drawer for accessibility.\n * \n * @param {Element} drawer - Drawer element\n */\nfunction trapFocus(drawer) {\n    const focusableElements = drawer.querySelectorAll(\n        'button, [href], input, select, textarea, [tabindex]:not([tabindex=\"-1\"])'\n    );\n    \n    if (focusableElements.length === 0) return;\n    \n    const firstElement = focusableElements[0];\n    const lastElement = focusableElements[focusableElements.length - 1];\n    \n    // Focus first element\n    setTimeout(() => firstElement.focus(), 100);\n    \n    // Tab trap\n    drawer.addEventListener('keydown', (event) => {\n        if (event.key !== 'Tab') return;\n        \n        if (event.shiftKey) {\n            // Shift + Tab\n            if (document.activeElement === firstElement) {\n                event.preventDefault();\n                lastElement.focus();\n            }\n        } else {\n            // Tab\n            if (document.activeElement === lastElement) {\n                event.preventDefault();\n                firstElement.focus();\n            }\n        }\n    });\n}\n\n/**\n * Update toggle button state.\n * \n * @param {boolean} isOpen - Whether drawer is open\n */\nfunction updateToggleState(isOpen) {\n    const toggle = document.querySelector('[data-aiawesome-toggle]');\n    if (!toggle) return;\n    \n    toggle.setAttribute('aria-expanded', isOpen.toString());\n    \n    if (isOpen) {\n        toggle.classList.add('active');\n    } else {\n        toggle.classList.remove('active');\n    }\n}\n\n/**\n * Get current course ID if available.\n * \n * @returns {number|null} Course ID\n */\nexport function getCurrentCourseId() {\n    // Try to get course ID from various sources\n    if (M.cfg.courseId && M.cfg.courseId !== 1) {\n        return M.cfg.courseId;\n    }\n    \n    // Try from URL\n    const urlMatch = window.location.pathname.match(/\\/course\\/view\\.php.*[?&]id=(\\d+)/);\n    if (urlMatch) {\n        return parseInt(urlMatch[1], 10);\n    }\n    \n    // Try from body data attribute\n    const courseId = document.body.getAttribute('data-course-id');\n    if (courseId && courseId !== '1') {\n        return parseInt(courseId, 10);\n    }\n    \n    return null;\n}\n\n/**\n * Generate a session ID for tracking related requests.\n * \n * @returns {string} Session ID\n */\nexport function generateSessionId() {\n    return 'sess_' + Date.now() + '_' + Math.random().toString(36).substr(2, 9);\n}"],"names":["Date","now","Math","random","toString","substr","M","cfg","courseId","urlMatch","window","location","pathname","match","parseInt","document","body","getAttribute","setupUI","title","selectors","userMenu","selector","querySelector","console","warn","toggleButton","createElement","className","setAttribute","innerHTML","Object","assign","style","position","top","right","zIndex","width","height","borderRadius","backgroundColor","color","border","boxShadow","cursor","display","alignItems","justifyContent","fontSize","transition","addEventListener","transform","handleToggleClick","appendChild","injectFloatingToggle","href","divider","parentNode","insertBefore","insertError","injectToggleButton","getElementById","drawer","id","flexDirection","createDrawerContainer","event","key","classList","contains","closeDrawer","target","hasAttribute","closest","innerWidth","error","preventDefault","stopPropagation","add","Promise","resolve","reject","require","app","mount","then","catch","Error","createSimpleChatInterface","loadAndMountApp","focusableElements","querySelectorAll","length","firstElement","lastElement","setTimeout","focus","shiftKey","activeElement","trapFocus","updateToggleState","openDrawer","dropdown","menu","remove","toggle","isOpen","developerdebug","readyState"],"mappings":"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"}