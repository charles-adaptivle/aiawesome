define("local_aiawesome/simple_app",["exports","core/str","./boot"],(function(_exports,_str,_boot){function getEnglishFallback(key){return{chat_placeholder:"Ask me anything about this course...",chat_send:"Send",chat_stop:"Stop",chat_clear:"Clear chat",chat_close:"Close",error_network:"Network error. Please check your connection.",error_server:"Server error. Please try again later."}[key]||key}Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.mount=
/**
   * AI Awesome Vanilla JS Application
   *
   * @module     local_aiawesome/simple_app
   * @copyright  2025 Charles Horton <charles@adaptivle.co.uk>
   * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
   */
async function(container){if(!container)throw new Error("Container element is required");const strings=await async function(){const stringKeys=["chat_placeholder","chat_send","chat_stop","chat_clear","chat_close","error_network","error_server"],strings={};for(const key of stringKeys)try{strings[key]=await(0,_str.getString)(key,"local_aiawesome")}catch(error){strings[key]=getEnglishFallback(key)}return strings}();(function(container,strings){container.innerHTML=`\n        <div class="aiawesome-app">\n            \x3c!-- Header --\x3e\n            <div class="aiawesome-header">\n                <h3 class="aiawesome-title">AI Chat Assistant</h3>\n                <button class="aiawesome-close-btn" data-action="close" \n                        aria-label="${strings.chat_close}" title="${strings.chat_close}">\n                    <i class="fa fa-times" aria-hidden="true"></i>\n                </button>\n            </div>\n            \n            \x3c!-- Messages Container --\x3e\n            <div class="aiawesome-messages" id="aiawesome-messages">\n                <div class="aiawesome-welcome">\n                    <div class="aiawesome-message aiawesome-message-assistant">\n                        <div class="aiawesome-message-content">\n                            <p>ðŸ‘‹ Hello! I'm your AI assistant. I can help you with questions about this course and your learning.</p>\n                            <p>What would you like to know?</p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            \n            \x3c!-- Input Area --\x3e\n            <div class="aiawesome-input-area">\n                <form class="aiawesome-input-form" id="aiawesome-input-form">\n                    <div class="aiawesome-input-container">\n                        <textarea class="aiawesome-input" \n                                id="aiawesome-input" \n                                placeholder="${strings.chat_placeholder}"\n                                rows="1"\n                                maxlength="2000"></textarea>\n                        <button type="submit" \n                                class="aiawesome-send-btn" \n                                id="aiawesome-send-btn"\n                                aria-label="${strings.chat_send}">\n                            <i class="fa fa-paper-plane" aria-hidden="true"></i>\n                        </button>\n                    </div>\n                    <div class="aiawesome-actions">\n                        <button type="button" \n                                class="aiawesome-action-btn aiawesome-stop-btn" \n                                id="aiawesome-stop-btn" \n                                style="display: none;"\n                                aria-label="${strings.chat_stop}">\n                            <i class="fa fa-stop" aria-hidden="true"></i>\n                            ${strings.chat_stop}\n                        </button>\n                        <button type="button" \n                                class="aiawesome-action-btn aiawesome-clear-btn" \n                                id="aiawesome-clear-btn"\n                                aria-label="${strings.chat_clear}">\n                            <i class="fa fa-trash" aria-hidden="true"></i>\n                            ${strings.chat_clear}\n                        </button>\n                    </div>\n                </form>\n            </div>\n            \n            \x3c!-- Status --\x3e\n            <div class="aiawesome-status" id="aiawesome-status" style="display: none;"></div>\n        </div>\n    `})(container,strings),function(container,strings){const form=container.querySelector("#aiawesome-input-form"),input=container.querySelector("#aiawesome-input"),sendBtn=container.querySelector("#aiawesome-send-btn"),stopBtn=container.querySelector("#aiawesome-stop-btn"),clearBtn=container.querySelector("#aiawesome-clear-btn"),closeBtn=container.querySelector('[data-action="close"]'),messagesContainer=container.querySelector("#aiawesome-messages");container.querySelector("#aiawesome-status");let isStreaming=!1,currentAbortController=null,sessionId=(0,_boot.generateSessionId)();function addMessage(role,content){const messageDiv=document.createElement("div");messageDiv.className=`aiawesome-message aiawesome-message-${role}`;const contentDiv=document.createElement("div");return contentDiv.className="aiawesome-message-content",contentDiv.textContent=content,messageDiv.appendChild(contentDiv),messagesContainer.appendChild(messageDiv),messagesContainer.scrollTop=messagesContainer.scrollHeight,messageDiv}async function startStreaming(message){isStreaming=!0,sendBtn.style.display="none",stopBtn.style.display="inline-flex";const contentDiv=addMessage("assistant","").querySelector(".aiawesome-message-content");contentDiv.innerHTML='<span class="aiawesome-thinking">ðŸ’­ Thinking...</span>';try{currentAbortController=new AbortController;const courseId=(0,_boot.getCurrentCourseId)(),requestData={query:message,session:sessionId,courseid:courseId,sesskey:M.cfg.sesskey},response=await fetch(M.cfg.wwwroot+"/local/aiawesome/stream.php",{method:"POST",headers:{"Content-Type":"application/json","X-Requested-With":"XMLHttpRequest"},body:JSON.stringify(requestData),credentials:"include",signal:currentAbortController.signal});if(!response.ok)throw new Error(`HTTP ${response.status}: ${response.statusText}`);const reader=response.body.getReader(),decoder=new TextDecoder;let buffer="",content="";for(contentDiv.innerHTML="";;){const{done:done,value:value}=await reader.read();if(done)break;buffer+=decoder.decode(value,{stream:!0});const lines=buffer.split("\n");buffer=lines.pop();for(const line of lines)if(line.startsWith("data: "))try{const data=JSON.parse(line.substring(6));data.choices&&data.choices[0]&&data.choices[0].delta&&data.choices[0].delta.content&&(content+=data.choices[0].delta.content,contentDiv.textContent=content,messagesContainer.scrollTop=messagesContainer.scrollHeight)}catch(e){}}content||(contentDiv.textContent="Sorry, I encountered an error processing your request.",contentDiv.className+=" aiawesome-error")}catch(error){"AbortError"===error.name?contentDiv.textContent="Response cancelled.":(contentDiv.textContent="Sorry, I encountered an error: "+error.message,contentDiv.className+=" aiawesome-error")}finally{stopStreaming()}}function stopStreaming(){isStreaming=!1,sendBtn.style.display="inline-flex",stopBtn.style.display="none",currentAbortController=null}function clearMessages(){messagesContainer.innerHTML='\n            <div class="aiawesome-welcome">\n                <div class="aiawesome-message aiawesome-message-assistant">\n                    <div class="aiawesome-message-content">\n                        <p>ðŸ‘‹ Hello! I\'m your AI assistant. I can help you with questions about this course and your learning.</p>\n                        <p>What would you like to know?</p>\n                    </div>\n                </div>\n            </div>\n        ',sessionId=(0,_boot.generateSessionId)()}input.addEventListener("input",(function(){this.style.height="auto",this.style.height=Math.min(this.scrollHeight,120)+"px"})),form.addEventListener("submit",(async function(e){e.preventDefault();const message=input.value.trim();message&&!isStreaming&&(addMessage("user",message),input.value="",input.style.height="auto",await startStreaming(message))})),stopBtn.addEventListener("click",(function(){currentAbortController&&currentAbortController.abort(),stopStreaming()})),clearBtn.addEventListener("click",(function(){confirm("Clear all messages?")&&clearMessages()})),closeBtn.addEventListener("click",(function(){const drawer=container.closest("#aiawesome-drawer");drawer&&(drawer.classList.remove("open"),drawer.setAttribute("aria-hidden","true"),drawer.style.transform="translateX(100%)",setTimeout((()=>{drawer.style.display="none"}),300))}))}(container)}}));

//# sourceMappingURL=simple_app.min.js.map